# ============================================================
# HomeMediaForge - mdns-publisher auto-generated config
# ============================================================
{{ $bindAddress := or (env "HMF_MDNS_BIND_ADDRESS") (env "MDNS_BIND_ADDRESS") }}
{{ if not $bindAddress -}}
# mdns-publisher: bind_address no definido. Establece HMF_MDNS_BIND_ADDRESS en tu .env.
{{ else -}}
bind_address = "{{ $bindAddress }}"
collision_avoidance = "{{ or (env "HMF_MDNS_COLLISION_STRATEGY") "hostname" }}"

{{ $localDomain := or (env "HMF_LOCAL_DOMAIN") (env "TRAEFIK_LOCAL_DOMAIN") "local" }}
{{ $hostSegment := or (env "HMF_HOST_SEGMENT") "" }}
{{ $serviceType := or (env "HMF_MDNS_SERVICE_TYPE") "_http._tcp" }}
{{ $defaultPort := or (env "HMF_MDNS_DEFAULT_PORT") "443" }}
{{ $ttl := or (env "HMF_MDNS_TTL") "120" }}
{{ $networkFilter := env "HMF_MDNS_NETWORK" }}

{{ range $container := . -}}
{{- if $container.State.Running -}}
{{- $name := trimPrefix "/" $container.Name -}}
{{- if and (ne $name "dnsbridge") (ne $name "dnswatcher") (ne $name "avahi") (ne $name "nbns") (ne $name "traefik") (ne $name "mdns") -}}
{{- $labels := $container.Labels -}}
{{- $port := or (index $labels "hmf.mdns.port") $defaultPort -}}
{{- range $netName, $network := $container.Networks -}}
{{- if and $network.IP (or (not $networkFilter) (eq $netName $networkFilter)) -}}
service {
    name = "{{ $name }}.{{ $localDomain }}"
    host_name = "{{ $name }}.{{ $localDomain }}."
    type = "{{ $serviceType }}"
    domain = "{{ $localDomain }}."
    port = {{ $port }}
    ttl = {{ $ttl }}
}
{{- if $hostSegment }}
service {
    name = "{{ $name }}.{{ $hostSegment }}.{{ $localDomain }}"
    host_name = "{{ $name }}.{{ $hostSegment }}.{{ $localDomain }}."
    type = "{{ $serviceType }}"
    domain = "{{ $localDomain }}."
    port = {{ $port }}
    ttl = {{ $ttl }}
}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{ end -}}
